for(v in final_items_freq_init ){
plot <- hist(freq_init_dat[,v, drop = TRUE],  freq = TRUE, cex.axis = 1, breaks= 30,  cex.lab = 1, xlab= "", ylab="", main = v)
}
mtext("Distributions of final items for the frequency of initiation conflicts", outer = TRUE, cex = 1.5)
dev.off()
# bivariate correlations among the items
par(mfrow = c(1,1))
png(filename = here("Plots", "freq_init_items_correlations.png"),  width = 1200, height = 1000)
freq_init_items_cors <- cor(freq_init_dat, use ="complete.obs")
corrplot(freq_init_items_cors, type = "lower", method = "square", tl.cex= 2)
# bivariate correlations among the items
par(mfrow = c(1,1))
png(filename = here("Plots", "freq_init_items_correlations.png"),  width = 1200, height = 1000)
freq_init_items_cors <- cor(freq_init_dat, use ="complete.obs")
corrplot(freq_init_items_cors, type = "lower", method = "square", tl.cex= 2)
grid.text("Correlations between the final items for the frequency of initiation conflicts",
x = 0.5, y = 0.95, gp = gpar(fontsize = 20))
dev.off()
# Two factors oblimin rotation
EFA_freq_init_obl_2<- fa(freq_init_dat, nfactors = 2, rotate= "oblimin")
loadings_freq_init_obl_2<- data.frame(matrix(EFA_freq_init_obl_2$loadings, ncol = 2)) %>%
mutate(across(where(is.numeric), ~ ifelse(abs(.) < 0.1, NA, .))) %>%
round(2)
# Two factors promax rotation
EFA_freq_init_pro_2<- fa(freq_init_dat, nfactors = 2, rotate= "promax")
loadings_freq_init_pro_2<- data.frame(matrix(EFA_freq_init_pro_2$loadings, ncol = 2)) %>%
mutate(across(where(is.numeric), ~ ifelse(abs(.) < 0.1, NA, .))) %>%
round(2)
item_text_freq_init <- codebook %>%
filter(item_name %in% final_items_freq_init) %>%
dplyr::select(item_name, item_text_english)
# bring them in order
item_text_freq_init <- item_text_freq_init[match(final_items_freq_init,item_text_freq_init$item_name), ]
# bivariate correlations between items and predictor
freq_init_predictor_items_cors <- round(cor(freq_init_dat, data$freq_con_init_ESM, use ="complete.obs"),2)
#combine
loadings_freq_init_obl_2 <- cbind(item_text_freq_init, loadings_freq_init_obl_2, freq_init_predictor_items_cors)
write_xlsx(loadings_freq_init_obl_2, here("EFA results", "freq_init_obl_2.xlsx"))
loadings_freq_init_pro_2 <- cbind(item_text_freq_init, loadings_freq_init_pro_2, freq_init_predictor_items_cors)
write_xlsx(loadings_freq_init_pro_2, here("EFA results", "freq_init_pro_2.xlsx"))
# Frequency persistence conflicts -----------------------------------------
final_items_freq_pers <- read_csv(here("ML results", "final_var_frequency_pers.csv")) %>% pull()
freq_pers_dat <- data %>% dplyr::select(all_of(final_items_freq_pers))
png(filename = here("Plots", "freq_pers_items_distributions.png"),  width = 1200, height = 1000)
par(mfrow = c(5, 3),
oma = c(0, 0, 6, 0),
mar = c(4, 4, 2, 1),
cex.main = 2,
cex.lab = 1.3,
cex.axis = 1.2)
for(v in final_items_freq_pers){
plot <- hist(freq_pers_dat[,v, drop = TRUE],  freq = TRUE, cex.axis = 1, breaks= 30,  cex.lab = 1, xlab= "", ylab="", main = v)
}
mtext("Distributions of final items for the frequency of persistence conflicts", outer = TRUE, cex = 1.5)
dev.off()
par(mfrow = c(4, 3),
oma = c(0, 0, 6, 0),
mar = c(4, 4, 2, 1),
cex.main = 2,
cex.lab = 1.3,
cex.axis = 1.2)
for(v in final_items_freq_pers){
plot <- hist(freq_pers_dat[,v, drop = TRUE],  freq = TRUE, cex.axis = 1, breaks= 30,  cex.lab = 1, xlab= "", ylab="", main = v)
}
mtext("Distributions of final items for the frequency of persistence conflicts", outer = TRUE, cex = 1.5)
dev.off()
png(filename = here("Plots", "freq_pers_items_distributions.png"),  width = 1200, height = 1000)
par(mfrow = c(4, 3),
oma = c(0, 0, 6, 0),
mar = c(4, 4, 2, 1),
cex.main = 2,
cex.lab = 1.3,
cex.axis = 1.2)
for(v in final_items_freq_pers){
plot <- hist(freq_pers_dat[,v, drop = TRUE],  freq = TRUE, cex.axis = 1, breaks= 30,  cex.lab = 1, xlab= "", ylab="", main = v)
}
mtext("Distributions of final items for the frequency of persistence conflicts", outer = TRUE, cex = 1.5)
dev.off()
# bivariate correlations among the items
par(mfrow = c(1,1))
png(filename = here("Plots", "freq_pers_items_correlations.png"),  width = 1200, height = 1000)
freq_pers_items_cors <- cor(freq_pers_dat, use ="complete.obs")
corrplot(freq_pers_items_cors, type = "lower", method = "square", tl.cex= 2)
grid.text("Correlations between the final items for the frequency of persistence conflicts",
x = 0.5, y = 0.95, gp = gpar(fontsize = 20))
dev.off()
# Exploratory three factors oblimin rotation
EFA_freq_pers_obl_3<- fa(freq_pers_dat, nfactors = 3, rotate= "oblimin")
loadings_freq_pers_obl_3<- data.frame(matrix(EFA_freq_pers_obl_3$loadings, ncol = 3)) %>%
mutate(across(where(is.numeric), ~ ifelse(abs(.) < 0.1, NA, .))) %>%
round(2)
# Exploratory three factors promax rotation
EFA_freq_pers_pro_3<- fa(freq_pers_dat, nfactors = 3, rotate= "promax")
loadings_freq_pers_pro_3<- data.frame(matrix(EFA_freq_pers_pro_3$loadings, ncol = 3)) %>%
mutate(across(where(is.numeric), ~ ifelse(abs(.) < 0.1, NA, .))) %>%
round(2)
#  Exploratory two factor solution oblimin rotation
EFA_freq_pers_obl_2<- fa(freq_pers_dat, nfactors = 2, rotate= "oblimin")
loadings_freq_pers_obl_2<- data.frame(matrix(EFA_freq_pers_obl_2$loadings, ncol = 2)) %>%
mutate(across(where(is.numeric), ~ ifelse(abs(.) < 0.1, NA, .))) %>%
round(2)
# Exploratory two factor solution promax rotation
EFA_freq_pers_pro_2<- fa(freq_pers_dat, nfactors = 2, rotate= "promax")
loadings_freq_pers_pro_2<- data.frame(matrix(EFA_freq_pers_pro_2$loadings, ncol = 2)) %>%
mutate(across(where(is.numeric), ~ ifelse(abs(.) < 0.1, NA, .))) %>%
round(2)
# add item text
item_text_freq_pers <- codebook %>%
filter(item_name %in% final_items_freq_pers) %>%
dplyr::select(item_name, item_text_english)
# bring them in order
item_text_freq_pers <- item_text_freq_pers[match(final_items_freq_pers,item_text_freq_pers$item_name), ]
# bivariate correlations between items and predictor
freq_pers_predictor_items_cors <- round(cor(freq_pers_dat, data$freq_con_pers_ESM, use ="complete.obs"),2)
#combine
loadings_freq_pers_obl_4 <- cbind(item_text_freq_pers, loadings_freq_pers_obl_4, freq_pers_predictor_items_cors)
write_xlsx(loadings_freq_pers_obl_4, here("EFA results", "freq_pers_obl_4.xlsx"))
loadings_freq_pers_pro_4 <- cbind(item_text_freq_pers, loadings_freq_pers_pro_4, freq_pers_predictor_items_cors)
write_xlsx(loadings_freq_pers_pro_4, here("EFA results", "freq_pers_pro_3.xlsx"))
loadings_freq_pers_obl_3 <- cbind(item_text_freq_pers, loadings_freq_pers_obl_3, freq_pers_predictor_items_cors)
write_xlsx(loadings_freq_pers_obl_3, here("EFA results", "freq_pers_obl_3.xlsx"))
loadings_freq_pers_pro_3 <- cbind(item_text_freq_pers, loadings_freq_pers_pro_3, freq_pers_predictor_items_cors)
write_xlsx(loadings_freq_pers_pro_3, here("EFA results", "freq_pers_pro_3.xlsx"))
loadings_freq_pers_obl_2 <- cbind(item_text_freq_pers, loadings_freq_pers_obl_2, freq_pers_predictor_items_cors)
write_xlsx(loadings_freq_pers_obl_2, here("EFA results", "freq_pers_obl_2.xlsx"))
loadings_freq_pers_pro_2 <- cbind(item_text_freq_pers, loadings_freq_pers_pro_2, freq_pers_predictor_items_cors)
write_xlsx(loadings_freq_pers_pro_2, here("EFA results", "freq_pers_pro_2.xlsx"))
# Intensity initiation conflicts ------------------------------------------
final_items_intensity_init <- read_csv(here("ML results", "final_var_intensity_init.csv")) %>% pull()
intensity_init_dat <- data %>% dplyr::select(all_of(final_items_intensity_init))
for(v in final_items_intensity_init){
plot <- hist(intensity_init_dat[,v, drop = TRUE],  freq = TRUE, cex.axis = 1, breaks= 30,  cex.lab = 1, xlab= "", ylab="", main = v)
}
png(filename = here("Plots", "intensity_init_items_distributions.png"),  width = 1200, height = 1000)
par(mfrow = c(2, 1),
oma = c(0, 0, 6, 0),
mar = c(4, 4, 2, 1),
cex.main = 2,
cex.lab = 1.3,
cex.axis = 1.2)
for(v in final_items_intensity_init){
plot <- hist(intensity_init_dat[,v, drop = TRUE],  freq = TRUE, cex.axis = 1, breaks= 30,  cex.lab = 1, xlab= "", ylab="", main = v)
}
mtext("Distributions of final items for the intensity of initiation conflicts", outer = TRUE, cex = 1.5)
dev.off()
# bivariate correlations among the items
par(mfrow = c(1,1))
png(filename = here("Plots", "intensity_init_items_correlations.png"),  width = 1200, height = 1000)
intensity_init_items_cors <- cor(intensity_init_dat, use ="complete.obs")
corrplot(intensity_init_items_cors, type = "lower", method = "square", tl.cex= 2)
grid.text("Correlations between the final items for the intensity of initiation conflicts",
x = 0.5, y = 0.95, gp = gpar(fontsize = 20))
dev.off()
# Intensity persistence conflicts -----------------------------------------
final_items_intensity_pers <- read_csv(here("ML results", "final_var_intensity_pers.csv")) %>% pull()
intensity_pers_dat <- data %>% dplyr::select(all_of(final_items_intensity_pers))
png(filename = here("Plots", "intensity_pers_items_distributions.png"),  width = 1200, height = 1000)
par(mfrow = c(5, 4),
oma = c(0, 0, 6, 0),
mar = c(4, 4, 2, 1),
cex.main = 2,
cex.lab = 1.3,
cex.axis = 1.2)
for(v in final_items_intensity_pers){
plot <- hist(intensity_pers_dat[,v, drop = TRUE],  freq = TRUE, cex.axis = 1, breaks= 30,  cex.lab = 1, xlab= "", ylab="", main = v)
}
mtext("Distributions of final items for the intensity of persistence conflicts", outer = TRUE, cex = 1.5)
dev.off()
# bivariate correlations among the items
par(mfrow = c(1,1))
png(filename = here("Plots", "intensity_pers_items_correlations.png"),  width = 1200, height = 1000)
intensity_pers_items_cors <- cor(intensity_pers_dat, use ="complete.obs")
corrplot(intensity_pers_items_cors, type = "lower", method = "square", tl.cex= 2)
grid.text("Correlations between the final items for the intensity of persistence conflicts",
x = 0.5, y = 0.95, gp = gpar(fontsize = 20))
dev.off()
# Five factors oblimin rotation
EFA_intensity_pers_obl_5<- fa(intensity_pers_dat, nfactors = 5, rotate= "oblimin")
loadings_intensity_pers_obl_5<- data.frame(matrix(EFA_intensity_pers_obl_5$loadings, ncol = 5)) %>%
mutate(across(where(is.numeric), ~ ifelse(abs(.) < 0.1, NA, .))) %>%
round(2)
# Five factors promax rotation
EFA_intensity_pers_pro_5<- fa(intensity_pers_dat, nfactors = 5, rotate= "promax")
loadings_intensity_pers_pro_5<- data.frame(matrix(EFA_intensity_pers_pro_5$loadings, ncol = 5)) %>%
mutate(across(where(is.numeric), ~ ifelse(abs(.) < 0.1, NA, .))) %>%
round(2)
# Two factors oblimin rotation
EFA_intensity_pers_obl_2<- fa(intensity_pers_dat, nfactors = 2, rotate= "oblimin")
loadings_intensity_pers_obl_2<- data.frame(matrix(EFA_intensity_pers_obl_2$loadings, ncol = 2)) %>%
mutate(across(where(is.numeric), ~ ifelse(abs(.) < 0.1, NA, .))) %>%
round(2)
# Two factors promax rotation
EFA_intensity_pers_pro_2<- fa(intensity_pers_dat, nfactors = 2, rotate= "promax")
loadings_intensity_pers_pro_2<- data.frame(matrix(EFA_intensity_pers_pro_2$loadings, ncol = 2)) %>%
mutate(across(where(is.numeric), ~ ifelse(abs(.) < 0.1, NA, .))) %>%
round(2)
# Five factors oblimin rotation
EFA_intensity_pers_obl_5<- fa(intensity_pers_dat, nfactors = 5, rotate= "oblimin")
loadings_intensity_pers_obl_5<- data.frame(matrix(EFA_intensity_pers_obl_5$loadings, ncol = 5)) %>%
mutate(across(where(is.numeric), ~ ifelse(abs(.) < 0.1, NA, .))) %>%
round(2)
# Five factors promax rotation
EFA_intensity_pers_pro_5<- fa(intensity_pers_dat, nfactors = 5, rotate= "promax")
loadings_intensity_pers_pro_5<- data.frame(matrix(EFA_intensity_pers_pro_5$loadings, ncol = 5)) %>%
mutate(across(where(is.numeric), ~ ifelse(abs(.) < 0.1, NA, .))) %>%
round(2)
# Two factors oblimin rotation
EFA_intensity_pers_obl_2<- fa(intensity_pers_dat, nfactors = 2, rotate= "oblimin")
loadings_intensity_pers_obl_2<- data.frame(matrix(EFA_intensity_pers_obl_2$loadings, ncol = 2)) %>%
mutate(across(where(is.numeric), ~ ifelse(abs(.) < 0.1, NA, .))) %>%
round(2)
# Two factors promax rotation
EFA_intensity_pers_pro_2<- fa(intensity_pers_dat, nfactors = 2, rotate= "promax")
loadings_intensity_pers_pro_2<- data.frame(matrix(EFA_intensity_pers_pro_2$loadings, ncol = 2)) %>%
mutate(across(where(is.numeric), ~ ifelse(abs(.) < 0.1, NA, .))) %>%
round(2)
# Exploratory four factors oblimin rotation
EFA_intensity_pers_obl_4<- fa(intensity_pers_dat, nfactors = 4, rotate= "oblimin")
loadings_intensity_pers_obl_4<- data.frame(matrix(EFA_intensity_pers_obl_4$loadings, ncol = 4)) %>%
mutate(across(where(is.numeric), ~ ifelse(abs(.) < 0.1, NA, .))) %>%
round(2)
# Exploratory four factors promax rotation
EFA_intensity_pers_pro_4<- fa(intensity_pers_dat, nfactors = 4, rotate= "promax")
loadings_intensity_pers_pro_4<- data.frame(matrix(EFA_intensity_pers_pro_4$loadings, ncol = 4)) %>%
mutate(across(where(is.numeric), ~ ifelse(abs(.) < 0.1, NA, .))) %>%
round(2)
item_text_intensity_pers <- codebook %>%
filter(item_name %in% final_items_intensity_pers) %>%
dplyr::select(item_name, item_text_english)
# bring them in order
item_text_intensity_pers <- item_text_intensity_pers[match(final_items_intensity_pers,item_text_intensity_pers$item_name), ]
# bivariate correlations between items and predictor
intensity_pers_predictor_items_cors <- round(cor(intensity_pers_dat, data$m_intensity_pers_ESM, use="complete.obs"),2)
#combine
loadings_intensity_pers_obl_5 <- cbind(item_text_intensity_pers, loadings_intensity_pers_obl_5,
intensity_pers_predictor_items_cors)
write_xlsx(loadings_intensity_pers_obl_5, here("EFA results", "intensity_pers_obl_5.xlsx"))
loadings_intensity_pers_pro_5 <- cbind(item_text_intensity_pers, loadings_intensity_pers_pro_5,
intensity_pers_predictor_items_cors)
write_xlsx(loadings_intensity_pers_pro_5, here("EFA results", "intensity_pers_pro_5.xlsx"))
loadings_intensity_pers_obl_2 <- cbind(item_text_intensity_pers, loadings_intensity_pers_obl_2,
intensity_pers_predictor_items_cors)
write_xlsx(loadings_intensity_pers_obl_2, here("EFA results", "intensity_pers_obl_2.xlsx"))
loadings_intensity_pers_pro_2 <- cbind(item_text_intensity_pers, loadings_intensity_pers_pro_2,
intensity_pers_predictor_items_cors)
write_xlsx(loadings_intensity_pers_pro_2, here("EFA results", "intensity_pers_pro_2.xlsx"))
loadings_intensity_pers_obl_4<- cbind(item_text_intensity_pers, loadings_intensity_pers_obl_4,
intensity_pers_predictor_items_cors)
write_xlsx(loadings_intensity_pers_obl_4, here("EFA results", "intensity_pers_obl_4.xlsx"))
loadings_intensity_pers_pro_4<- cbind(item_text_intensity_pers, loadings_intensity_pers_pro_4,
intensity_pers_predictor_items_cors)
write_xlsx(loadings_intensity_pers_pro_4, here("EFA results", "intensity_pers_pro_4.xlsx"))
# Success initiation conflicts --------------------------------------------
final_items_success_init <- read_csv(here("ML results", "final_var_success_init.csv")) %>% pull()
success_init_dat <- data %>% dplyr::select(all_of(final_items_success_init))
png(filename = here("Plots", "success_init_items_distributions.png"),  width = 1200, height = 1000)
par(mfrow = c(5, 5),
oma = c(0, 0, 6, 0),
mar = c(4, 4, 2, 1),
cex.main = 2,
cex.lab = 1.3,
cex.axis = 1.2)
png(filename = here("Plots", "success_init_items_distributions.png"),  width = 1200, height = 1000)
par(mfrow = c(5, 5),
oma = c(0, 0, 6, 0),
mar = c(4, 4, 2, 1),
cex.main = 2,
cex.lab = 1.3,
cex.axis = 1.2)
for(v in final_items_intensity_init){
plot <- hist(intensity_pers_dat[,v, drop = TRUE],  freq = TRUE, cex.axis = 1, breaks= 30,  cex.lab = 1, xlab= "", ylab="", main = v)
}
mtext("Distributions of final items for the success of initiation conflicts", outer = TRUE, cex = 1.5)
dev.off()
png(filename = here("Plots", "success_init_items_distributions.png"),  width = 1200, height = 1000)
par(mfrow = c(5, 5),
oma = c(0, 0, 6, 0),
mar = c(4, 4, 2, 1),
cex.main = 2,
cex.lab = 1.3,
cex.axis = 1.2)
for(v in final_items_success_init){
plot <- hist(success_init_dat[,v, drop = TRUE],  freq = TRUE, cex.axis = 1, breaks= 30,  cex.lab = 1, xlab= "", ylab="", main = v)
}
mtext("Distributions of final items for the success of initiation conflicts", outer = TRUE, cex = 1.5)
dev.off()
success_init_items_cors <- cor(success_init_dat, use ="complete.obs")
# bivariate correlations among the items
par(mfrow = c(1,1))
png(filename = here("Plots", "success_init_items_correlations.png"),  width = 1200, height = 1000)
success_init_items_cors <- cor(success_init_dat, use ="complete.obs")
corrplot(success_init_items_cors, type = "lower", method = "square", tl.cex= 2)
grid.text("Correlations between the final items for the success of initiation conflicts",
x = 0.5, y = 0.95, gp = gpar(fontsize = 20))
dev.off()
# check requirements
check_factorstructure(success_init_dat)
# Seven factors oblimin rotation
EFA_success_init_obl_7 <- fa(success_init_dat, nfactors = 7,  rotate= "oblimin")
loadings_success_init_obl_7 <- data.frame(matrix(EFA_success_init_obl_7$loadings, ncol = 7)) %>%
mutate(across(where(is.numeric), ~ ifelse(abs(.) < 0.1, NA, .))) %>%
round(2)
# Seven factors promax rotation
EFA_success_init_pro_7 <- fa(success_init_dat, nfactors = 7,  rotate= "promax")
loadings_success_init_pro_7 <- data.frame(matrix(EFA_success_init_pro_7$loadings, ncol = 7)) %>%
mutate(across(where(is.numeric), ~ ifelse(abs(.) < 0.1, NA, .))) %>%
round(2)
# Exploratory five factors oblimin rotation
EFA_success_init_obl_5 <- fa(success_init_dat, nfactors = 5,  rotate= "oblimin")
loadings_success_init_obl_5 <- data.frame(matrix(EFA_success_init_obl_5$loadings, ncol = 5)) %>%
mutate(across(where(is.numeric), ~ ifelse(abs(.) < 0.1, NA, .))) %>%
round(2)
# Exploratory five factors promax rotation
EFA_success_init_pro_5 <- fa(success_init_dat, nfactors = 5,  rotate= "promax")
loadings_success_init_pro_5 <- data.frame(matrix(EFA_success_init_pro_5$loadings, ncol = 5)) %>%
mutate(across(where(is.numeric), ~ ifelse(abs(.) < 0.1, NA, .))) %>%
round(2)
item_text_success_init <- codebook %>%
filter(item_name %in% final_items_success_init) %>%
dplyr::select(item_name, item_text_english)
# bring them in order
item_text_success_init <- item_text_success_init[match(final_items_success_init,
item_text_success_init$item_name), ]
# bivariate correlations between items and predictor
success_init_predictor_items_cors <-round(cor(success_init_dat,data$m_success_init_ESM,use="complete.obs"),2)
#combine
loadings_success_init_obl_7<- cbind(item_text_success_init, loadings_success_init_obl_7, success_init_predictor_items_cors)
write_xlsx(loadings_success_init_obl_7, here("EFA results", "success_init_obl_7.xlsx"))
loadings_success_init_pro_7<- cbind(item_text_success_init, loadings_success_init_pro_7, success_init_predictor_items_cors)
write_xlsx(loadings_success_init_pro_7, here("EFA results", "success_init_pro_7.xlsx"))
write_xlsx(loadings_success_init_pro_7, here("EFA results", "success_init_pro_7.xlsx"))
loadings_success_init_obl_5<- cbind(item_text_success_init, loadings_success_init_obl_5, success_init_predictor_items_cors)
write_xlsx(loadings_success_init_obl_5, here("EFA results", "success_init_obl_5.xlsx"))
loadings_success_init_pro_5<- cbind(item_text_success_init, loadings_success_init_pro_5, success_init_predictor_items_cors)
write_xlsx(loadings_success_init_pro_5, here("EFA results", "success_init_pro_5.xlsx"))
# Success persistence conflicts -------------------------------------------
final_items_success_pers <- read_csv(here("Data", "final_var_success_pers.csv")) %>% pull()
success_pers_dat <- data %>% dplyr::select(all_of(final_items_success_pers))
# Success persistence conflicts -------------------------------------------
final_items_success_pers <- read_csv(here("ML results", "final_var_success_pers.csv")) %>% pull()
success_pers_dat <- data %>% dplyr::select(all_of(final_items_success_pers))
png(filename = here("Plots", "success_pers_items_distributions.png"),  width = 1200, height = 1000)
par(mfrow = c(5, 3),
oma = c(0, 0, 6, 0),
mar = c(4, 4, 2, 1),
cex.main = 2,
cex.lab = 1.3,
cex.axis = 1.2)
for(v in final_items_success_pers){
plot <- hist(success_pers_dat[,v, drop = TRUE],  freq = TRUE, cex.axis = 1, breaks= 30,  cex.lab = 1, xlab= "", ylab="", main = v)
}
mtext("Distributions of final items for the success of persistence conflicts", outer = TRUE, cex = 1.5)
dev.off()
# Success persistence conflicts -------------------------------------------
final_items_success_pers <- read_csv(here("ML results", "final_var_success_pers.csv")) %>% pull()
success_pers_dat <- data %>% dplyr::select(all_of(final_items_success_pers))
png(filename = here("Plots", "success_pers_items_distributions.png"),  width = 1200, height = 1000)
par(mfrow = c(5, 3),
oma = c(0, 0, 6, 0),
mar = c(4, 4, 2, 1),
cex.main = 2,
cex.lab = 1.3,
cex.axis = 1.2)
for(v in final_items_success_pers){
plot <- hist(success_pers_dat[,v, drop = TRUE],  freq = TRUE, cex.axis = 1, breaks= 30,  cex.lab = 1, xlab= "", ylab="", main = v)
}
mtext("Distributions of final items for the success of persistence conflicts", outer = TRUE, cex = 1.5)
dev.off()
# bivariate correlations among the items
par(mfrow = c(1,1))
png(filename = here("Plots", "success_pers_items_correlations.png"),  width = 1200, height = 1000)
success_pers_items_cors <- cor(success_pers_dat, use ="complete.obs")
corrplot(success_pers_items_cors, type = "lower", method = "square", tl.cex= 2)
grid.text("Correlations between the final items for the success of persistence conflicts",
x = 0.5, y = 0.95, gp = gpar(fontsize = 20))
dev.off()
# Four factors oblimin rotation
EFA_success_pers_obl_4 <- fa(success_pers_dat, nfactors = 4,  rotate= "oblimin")
loadings_success_pers_obl_4<- data.frame(matrix(EFA_success_pers_obl_4$loadings, ncol = 4)) %>%
mutate(across(where(is.numeric), ~ ifelse(abs(.) < 0.1, NA, .))) %>%
round(2)
# Four factors promax rotation
EFA_success_pers_pro_4 <- fa(success_pers_dat, nfactors = 4,  rotate= "promax")
loadings_success_pers_pro_4<- data.frame(matrix(EFA_success_pers_pro_4$loadings, ncol = 4)) %>%
mutate(across(where(is.numeric), ~ ifelse(abs(.) < 0.1, NA, .))) %>%
round(2)
# Exploratory three factors oblimin rotation
EFA_success_pers_obl_3 <- fa(success_pers_dat, nfactors = 3,  rotate= "oblimin")
loadings_success_pers_obl_3<- data.frame(matrix(EFA_success_pers_obl_3$loadings, ncol = 3)) %>%
mutate(across(where(is.numeric), ~ ifelse(abs(.) < 0.1, NA, .))) %>%
round(2)
# Exploratory three factors promax rotation
EFA_success_pers_pro_3 <- fa(success_pers_dat, nfactors = 3,  rotate= "promax")
loadings_success_pers_pro_3<- data.frame(matrix(EFA_success_pers_pro_3$loadings, ncol = 3)) %>%
mutate(across(where(is.numeric), ~ ifelse(abs(.) < 0.1, NA, .))) %>%
round(2)
# Exploratory two factors oblimin rotation
EFA_success_pers_obl_2 <- fa(success_pers_dat, nfactors = 2,  rotate= "oblimin")
loadings_success_pers_obl_2<- data.frame(matrix(EFA_success_pers_obl_2$loadings, ncol = 2)) %>%
mutate(across(where(is.numeric), ~ ifelse(abs(.) < 0.1, NA, .))) %>%
round(2)
# Exploratory two factors promax rotation
EFA_success_pers_pro_2 <- fa(success_pers_dat, nfactors = 2,  rotate= "promax")
loadings_success_pers_pro_2<- data.frame(matrix(EFA_success_pers_pro_2$loadings, ncol = 2)) %>%
mutate(across(where(is.numeric), ~ ifelse(abs(.) < 0.1, NA, .))) %>%
round(2)
item_text_success_pers <- codebook %>%
filter(item_name %in% final_items_success_pers) %>%
dplyr::select(item_name, item_text_english)
# bring them in order
item_text_success_pers <- item_text_success_pers[match(final_items_success_pers,
item_text_success_pers$item_name), ]
# bivariate correlations between items and predictor
success_pers_predictor_items_cors <-round(cor(success_pers_dat,data$m_success_pers_ESM,use="complete.obs"),2)
#combine
loadings_success_pers_obl_4 <- cbind(item_text_success_pers, loadings_success_pers_obl_4, success_pers_predictor_items_cors)
write_xlsx(loadings_success_pers_obl_4, here("EFA results", "success_pers_obl_4.xlsx"))
loadings_success_pers_pro_4 <- cbind(item_text_success_pers, loadings_success_pers_pro_4, success_pers_predictor_items_cors)
write_xlsx(loadings_success_pers_pro_4, here("EFA results", "success_pers_pro_4.xlsx"))
loadings_success_pers_obl_3 <- cbind(item_text_success_pers, loadings_success_pers_obl_3, success_pers_predictor_items_cors)
write_xlsx(loadings_success_pers_obl_3, here("EFA results", "success_pers_obl_3.xlsx"))
loadings_success_pers_pro_3 <- cbind(item_text_success_pers, loadings_success_pers_pro_3, success_pers_predictor_items_cors)
write_xlsx(loadings_success_pers_pro_3, here("EFA results", "success_pers_pro_3.xlsx"))
loadings_success_pers_obl_2 <- cbind(item_text_success_pers, loadings_success_pers_obl_2, success_pers_predictor_items_cors)
write_xlsx(loadings_success_pers_obl_2, here("EFA results", "success_pers_obl_2.xlsx"))
loadings_success_pers_pro_2 <- cbind(item_text_success_pers, loadings_success_pers_pro_2, success_pers_predictor_items_cors)
write_xlsx(loadings_success_pers_pro_2, here("EFA results", "success_pers_pro_2.xlsx"))
# Frequency across conflicts ----------------------------------------------
final_items_freq_all <- read_csv(here("ML results", "final_var_frequency_all.csv")) %>% pull()
# assign items to composites based on the results of the EFA
composites <- list(
dutifulness_compliance_5 = c("ipc2_5", "ipc3_5", "ipc3_6", "scs04"),
impulse_inhibition_2 = c("hoyle3", "hoyle6")
)
# Define single items for renaming
single_items <- c(
bfi1 = "talkativeness_1",
bisf14 = "inattention_1",
ipc2_2 = "tidiness_1",
MISCS25 = "metacognitive_regulation_1",
ERQ5 = "reappraisal_1",
MISCS4 = "metacognitive_knowledge_1",
hoyle12 = "behavior_initiation_1"
)
# prepare variables
freq_all_dat_final <- prepare_vars(freq_all_dat, single_items, composites)
# add outcome variable
freq_all_dat_final <- cbind(freq_all_dat_final, data[, "freq_con_all_ESM"]) %>% filter(!is.na(freq_con_all_ESM))
#create dataset that contains the composite scores
freq_all_composite <- freq_all_dat_final %>% dplyr::select(dutifulness_compliance_5, impulse_inhibition_2,talkativeness_1,
metacognitive_regulation_1, inattention_1, tidiness_1, metacognitive_knowledge_1,
reappraisal_1, behavior_initiation_1, freq_con_all_ESM)
freq_all_robust <- freq_all_dat_final %>% dplyr::select(ipc3_6, hoyle6,inattention_1, tidiness_1, metacognitive_regulation_1,
reappraisal_1, talkativeness_1, metacognitive_knowledge_1,
behavior_initiation_1,  freq_con_all_ESM) %>%
rename(dutifulness_compliance = ipc3_6, impulse_inhibition = hoyle6,
metacognitive_regulation = metacognitive_regulation_1, inattention = inattention_1,
tidiness = tidiness_1, reappraisal = reappraisal_1, metacognitive_knowledge = metacognitive_knowledge_1,
behavior_initiation = behavior_initiation_1, talkativeness = talkativeness_1)
# get final coefficients
cors_freq_all_c <- final_cors(freq_all_composite, "freq_con_all_ESM")
betas_freq_all_c <- final_betas(freq_all_composite, "freq_con_all_ESM")
cors_freq_all_r <- final_cors(freq_all_robust, "freq_con_all_ESM")
betas_freq_all_r <- final_betas(freq_all_robust, "freq_con_all_ESM")
# plot the results
par(mfrow = c(1,2))  # Reset multi-plot settings
coefficient_plot(cors_freq_all_c, left_margin = 16)
coefficient_plot(cors_freq_all_r, left_margin = 16)
coefficient_plot(cors_freq_all_c, left_margin = 16)
coefficient_plot(cors_freq_all_c, left_margin = 16)
coefficient_plot(cors_freq_all_c, left_margin = 16)
# plot the results
par(mfrow = c(1,2))  # Reset multi-plot settings
coefficient_plot(cors_freq_all_c, left_margin = 16)
coefficient_plot(cors_freq_all_r, left_margin = 16)
final_items_intensity_all <- read_csv(here("Data", "final_var_intensity_all.csv")) %>% pull()
# plot the results
par(mfrow = c(1,2))  # Reset multi-plot settings
coefficient_plot(cors_freq_all_c, left_margin = 16)
coefficient_plot(cors_freq_all_r, left_margin = 16)
library(tidyverse)
library(mlr3verse)
final_betas <- function(data, outcome_var) {
all_vars <- names(data)
predictor_vars <- setdiff(all_vars, outcome_var)
# Keep only rows where outcome is not missing
data_filtered <- data[!is.na(data[[outcome_var]]), ]
# Mean imputation for missing predictor values
for (var in predictor_vars) {
missing <- is.na(data_filtered[[var]])
if (any(missing)) {
data_filtered[[var]][missing] <- mean(data_filtered[[var]], na.rm = TRUE)
}
}
# Standardize all variables
data_scaled <- data_filtered %>%
mutate(across(all_of(c(outcome_var, predictor_vars)), scale))
# Run regression
formula <- as.formula(paste(outcome_var, "~", paste(predictor_vars, collapse = " + ")))
model <- lm(formula, data = data_scaled)
# Extract coefficients (excluding intercept)
betas <- coef(model)[-1]
result <- data.frame(
var = names(betas),
coefficient = as.numeric(betas)
) %>% mutate(
abs_coefficient = abs(coefficient),
direction = ifelse(coefficient > 0, "positive", "negative")
)
return(result)
}
betas_freq_all_r <- final_betas(freq_all_robust, "freq_con_all_ESM")
